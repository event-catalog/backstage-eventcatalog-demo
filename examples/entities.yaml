---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
  annotations:
    eventcatalog.dev/id: NotificationService
    eventcatalog.dev/version: 0.0.2
    eventcatalog.dev/collection: services
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: frontend-service
  description: Frontend web application
  annotations:
    github.com/project-slug: organization/frontend-repo
  tags:
    - react
    - typescript
    - web
spec:
  type: website
  lifecycle: production
  owner: team-name
  system: example-system
  dependsOn:
    - component:default/backend-service
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: backend-service
  description: Backend API service
  annotations:
    github.com/project-slug: organization/backend-repo
    eventcatalog.dev/id: InventoryService
    eventcatalog.dev/version: 0.0.2
  tags:
    - nodejs
    - express
    - api
spec:
  type: service
  lifecycle: production
  owner: team-name
  system: example-system
  providesApis:
    - backend-api
  dependsOn:
    - resource:default/database
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: backend-api
  description: Backend REST API
spec:
  type: openapi
  lifecycle: production
  owner: team-name
  system: example-system
  definition:
    $text: ./openapi.yaml
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: database
  description: Main database
spec:
  type: database
  owner: team-name
  system: example-system

